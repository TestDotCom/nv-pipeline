name: CI pipeline
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  SNAPSHOT: ${{ github.repository }}
  RELEASE: "testdotcom/nv-pipeline:latest"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - name: Login Github registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract Github image metadata
      id: gh-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.SNAPSHOT }}
    - name: Snapshot build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ steps.gh-meta.outputs.tags }}
        labels: ${{ steps.gh-meta.outputs.labels }}
    - name: Run NeuVector scan
      run: |
        curl -kH "Content-Type: application/json" \
          -d '{"password": {"username": "'${{ secrets.NV_USERNAME }}'", "password": "'${{ secrets.NV_PASSWORD }}'"}}' \
          "${{ secrets.NV_ENDPOINT }}/v1/auth" > /dev/null 2>&1 > token.json
        
        TOKEN=`cat token.json | jq -r '.token.token'`
        
        curl -kH "Content-Type: application/json" -H "X-Auth-Token: $TOKEN" \
          -d '{"request": {"registry": "https://${{ env.REGISTRY }}", "tag": "main", "repository": "${{ env.SNAPSHOT }}"}}' \
          "${{ secrets.NV_ENDPOINT }}/v1/scan/repository"
        
        curl -kX 'DELETE' -H "Content-Type: application/json" -H "X-Auth-Token: $TOKEN" \
          "${{ secrets.NV_ENDPOINT }}/v1/auth" > /dev/null 2>&1
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Release image push
      uses: akhilerm/tag-push-action@v2.2.0
      with:
        src: ${{ steps.gh-meta.outputs.tags }}
        dst: ${{ env.ACR_LOGIN_SERVER }}/${{ env.RELEASE }}
